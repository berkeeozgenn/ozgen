import numpy as np
from matplotlib import pyplot as plt
from sklearn.linear_model import LogisticRegression as lr

x1 = np.array([0,0.6,1.1,1.5,1.8,2.5,3,3.1,3.9,4,4.9,5,5.1])
y1 = np.array([0,0,0,0,0,0,0,0,0,0,0,0,0])

x2 = np.array([3,3.8,4.4,5.2,5.5,6.5,6,6.1,6.9,7,7.9,8,8.1])
y2 = np.array([1,1,1,1,1,1,1,1,1,1,1,1,1])

x = np.array([[0],[0.6],[1.1],[1.5],[1.8],[2.5],[3],[3.1],[3.9],[4],[4.9],[5],[5.1],[3],[3.8],[4.4],[5.2],[5.5],[6.5],[6],[6.1],[6.9],[7],[7.9],[8],[8.1]])
y = np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1])


plt.plot(x1,y1, "ro", color="red")
plt.plot(x2, y2, "ro", color="blue")

model=lr()
model.fit(x,y)
b1=model.coef_
b0=model.intercept_

print("b0:  ", b0)
print("b1:  ", b1)

def logistic(x):
    return 1/(1+np.exp(-(b0+b1*x)))  #sigmoid fonksiyonunu tanımladık. neden sigmoid? bizim için karar verexek fonk bu.

for i in range(1,120):
    plt.plot(i/10-3,logistic(i/10), "ro", color="black") #sigmoid i kendimiz çiziyoruz. verilen değerler ile
    
plt.show()

bizimki=model.predict_proba([[20]])  #predict_proba maviye ait olma probabality sini veriyor.
print("bizim sorduğumuz değer: ",bizimki)
    
